"use strict";{let keysOf=object=>Object.keys(object),log=console.log,MLdefaultExp=/\{\{(0|key)\}\}/g,MLarrayExp=/\{\{(this|index)\}\}/g,MLexp=/(\{\{.*\}\})/,MLexpArg=letter=>new RegExp(`\\{\\{${letter}\\[(\\d)\\]\\}\\}`,"g");var dimML={originalElements:{},populate:function(nestedLevels=3){let DataSources=[];for(let iteration=1;iteration<=nestedLevels&&document.querySelectorAll("[data-source]").length>0;iteration++)document.querySelectorAll("[data-source]").forEach(element=>{const dataSourceName=element.attributes["data-source"].value;DataSources.push(dataSourceName);const identifier=element.getAttribute("data-identifier")||"";if(element.id&&(this.originalElements[element.id]=element.outerHTML),MLexp.test(dataSourceName))return;element.removeAttribute("data-source"),element.removeAttribute("data-identifier");const template=element.innerHTML;element.innerHTML="";let DataWasObject=!1;try{const DataSource=eval(dataSourceName);let DataArray=[];if(DataSource.constructor==Array)DataArray=DataSource;else{if("object"!=typeof DataSource){try{element.innerHTML=DataSource}catch{}return}try{DataArray=keysOf(DataSource),DataWasObject=!0}catch{}}DataArray.forEach((record,recordIndex)=>{let newHTML=template;if(record.constructor==Array)record.forEach((value,index)=>{newHTML=identifier?newHTML.replaceAll(`{{${identifier}[${index+1}]}}`,value):newHTML.replaceAll(`{{${index+1}}}`,value)});else if("object"==typeof record)for(const property in record)newHTML=newHTML.replaceAll(`{{${property}}}`,record[property]);else identifier&&(newHTML=newHTML.replaceAll(MLexpArg(identifier),`<span data-variable>${dataSourceName}['{{${identifier}}}'][$1]</span>`)),newHTML=newHTML.replaceAll(identifier?`{{${identifier}}}`:MLdefaultExp,record),DataWasObject&&(newHTML=newHTML.replaceAll("{{value}}",DataSource[record]));newHTML=newHTML.replaceAll(MLarrayExp,recordIndex).replaceAll("{{counter}}",recordIndex+1),element.innerHTML+=newHTML,this.evalVariables(element)})}catch{element.removeAttribute("data-source"),element.removeAttribute("data-identifier")}});return document.querySelectorAll("[data-source]").forEach(element=>{element.remove()}),DataSources},evalVariables:function(element=document,keepAttribute=!1){let elementList=element.querySelectorAll("[data-variable]");return elementList.forEach(e=>{try{e.innerText=eval(e.innerText)}catch{}keepAttribute||e.removeAttribute("data-variable")}),elementList},update:function(elementID){let element=document.getElementById(elementID);return element.outerHTML=this.originalElements[elementID],this.populate(),element}};let defaultNestedLevels=3;var dimMLnestedLevels;dimMLnestedLevels=dimMLnestedLevels||defaultNestedLevels}dimML.evalVariables(document),dimML.populate(dimMLnestedLevels);